/*
 * stex.com rest API description
 * This is API you can use to connect your application to stex.com exchange and utilize all available features. All requests should go to the https://api3.stex.com followed by the one of the endpoint described below. The enpoints placed inside the /public section do not require authentication, all others requests should be authenticated with credentials you can get in your profile at https://app.stex.com/en/profile We also have a web-socket API present that has a number of advantages and is recommended way to connect to get the updates of the trading information To test API using this tool, please specify https://apidocs.stex.com/oauth2-redirect.html as Redirect URL in your API v3 client at https://app.stex.com/en/profile/settings 
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.baeldung.petstore.client.api;

import com.pseq.stex.client.model.OrderDetailsResponse;
import com.pseq.stex.client.model.OrdersResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TradingHistoryApi
 */
@Ignore
public class TradingHistoryApiTest {

    private final TradingHistoryApi api = new TradingHistoryApi();

    /**
     * Get past orders
     *
     * Get the list of closed (finished, partial or cancelled) orders
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void reportsOrdersGetTest() {
        Integer currencyPairId = null;
        String orderStatus = null;
        String timeStart = null;
        String timeEnd = null;
        Integer limit = null;
        Integer offset = null;
        OrdersResponse response = api.reportsOrdersGet(currencyPairId, orderStatus, timeStart, timeEnd, limit, offset);

        // TODO: test validations
    }
    /**
     * Get specified order details
     *
     * Get trades and fees information for given order
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void reportsOrdersOrderIdGetTest() {
        Integer orderId = null;
        OrderDetailsResponse response = api.reportsOrdersOrderIdGet(orderId);

        // TODO: test validations
    }
}
