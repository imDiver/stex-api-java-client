/*
 * stex.com rest API description
 * This is API you can use to connect your application to stex.com exchange and utilize all available features. All requests should go to the https://api3.stex.com followed by the one of the endpoint described below. The enpoints placed inside the /public section do not require authentication, all others requests should be authenticated with credentials you can get in your profile at https://app.stex.com/en/profile We also have a web-socket API present that has a number of advantages and is recommended way to connect to get the updates of the trading information To test API using this tool, please specify https://apidocs.stex.com/oauth2-redirect.html as Redirect URL in your API v3 client at https://app.stex.com/en/profile/settings 
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.pseq.stex.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;

/**
 * Deposit
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-05-02T20:38:18.888Z[GMT]")public class Deposit {

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("currency_id")

  private Integer currencyId = null;

  @JsonProperty("currency_code")

  private String currencyCode = null;

  @JsonProperty("deposit_fee_currency_id")

  private Integer depositFeeCurrencyId = null;

  @JsonProperty("deposit_fee_currency_code")

  private String depositFeeCurrencyCode = null;

  @JsonProperty("amount")

  private BigDecimal amount = null;

  @JsonProperty("fee")

  private BigDecimal fee = null;

  @JsonProperty("txid")

  private String txid = null;
  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    PROCESSING("PROCESSING"),
    AWAITING_APPROVAL("AWAITING APPROVAL"),
    FINISHED("FINISHED"),
    CANCELLED_BY_ADMIN("CANCELLED BY ADMIN"),
    DEPOSIT_ERROR("DEPOSIT ERROR"),
    HODL("HODL");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }
  @JsonProperty("status")

  private StatusEnum status = null;

  @JsonProperty("created_at")

  private OffsetDateTime createdAt = null;

  @JsonProperty("timestamp")

  private Integer timestamp = null;

  @JsonProperty("confirmations")

  private String confirmations = null;
  public Deposit id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(example = "123654789", description = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public Deposit currencyId(Integer currencyId) {
    this.currencyId = currencyId;
    return this;
  }

  

  /**
  * Get currencyId
  * @return currencyId
  **/
  @Schema(example = "1", description = "")
  public Integer getCurrencyId() {
    return currencyId;
  }
  public void setCurrencyId(Integer currencyId) {
    this.currencyId = currencyId;
  }
  public Deposit currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  

  /**
  * Get currencyCode
  * @return currencyCode
  **/
  @Schema(example = "BTC", description = "")
  public String getCurrencyCode() {
    return currencyCode;
  }
  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }
  public Deposit depositFeeCurrencyId(Integer depositFeeCurrencyId) {
    this.depositFeeCurrencyId = depositFeeCurrencyId;
    return this;
  }

  

  /**
  * Get depositFeeCurrencyId
  * @return depositFeeCurrencyId
  **/
  @Schema(example = "1", description = "")
  public Integer getDepositFeeCurrencyId() {
    return depositFeeCurrencyId;
  }
  public void setDepositFeeCurrencyId(Integer depositFeeCurrencyId) {
    this.depositFeeCurrencyId = depositFeeCurrencyId;
  }
  public Deposit depositFeeCurrencyCode(String depositFeeCurrencyCode) {
    this.depositFeeCurrencyCode = depositFeeCurrencyCode;
    return this;
  }

  

  /**
  * Get depositFeeCurrencyCode
  * @return depositFeeCurrencyCode
  **/
  @Schema(example = "BTC", description = "")
  public String getDepositFeeCurrencyCode() {
    return depositFeeCurrencyCode;
  }
  public void setDepositFeeCurrencyCode(String depositFeeCurrencyCode) {
    this.depositFeeCurrencyCode = depositFeeCurrencyCode;
  }
  public Deposit amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

  

  /**
  * Get amount
  * @return amount
  **/
  @Schema(example = "0.25", description = "")
  public BigDecimal getAmount() {
    return amount;
  }
  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }
  public Deposit fee(BigDecimal fee) {
    this.fee = fee;
    return this;
  }

  

  /**
  * Get fee
  * @return fee
  **/
  @Schema(example = "0.00025", description = "")
  public BigDecimal getFee() {
    return fee;
  }
  public void setFee(BigDecimal fee) {
    this.fee = fee;
  }
  public Deposit txid(String txid) {
    this.txid = txid;
    return this;
  }

  

  /**
  * Get txid
  * @return txid
  **/
  @Schema(example = "qwertyuhgfdsasdfgh", description = "")
  public String getTxid() {
    return txid;
  }
  public void setTxid(String txid) {
    this.txid = txid;
  }
  public Deposit status(StatusEnum status) {
    this.status = status;
    return this;
  }

  

  /**
  * Get status
  * @return status
  **/
  @Schema(example = "PROCESSING", description = "")
  public StatusEnum getStatus() {
    return status;
  }
  public void setStatus(StatusEnum status) {
    this.status = status;
  }
  public Deposit createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  

  /**
  * Get createdAt
  * @return createdAt
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }
  public Deposit timestamp(Integer timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  

  /**
  * Get timestamp
  * @return timestamp
  **/
  @Schema(example = "1543409389", description = "")
  public Integer getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(Integer timestamp) {
    this.timestamp = timestamp;
  }
  public Deposit confirmations(String confirmations) {
    this.confirmations = confirmations;
    return this;
  }

  

  /**
  * A string representing the current number of confirmations compared to required number of confirmations
  * @return confirmations
  **/
  @Schema(example = "1 of 2", description = "A string representing the current number of confirmations compared to required number of confirmations")
  public String getConfirmations() {
    return confirmations;
  }
  public void setConfirmations(String confirmations) {
    this.confirmations = confirmations;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Deposit deposit = (Deposit) o;
    return Objects.equals(this.id, deposit.id) &&
        Objects.equals(this.currencyId, deposit.currencyId) &&
        Objects.equals(this.currencyCode, deposit.currencyCode) &&
        Objects.equals(this.depositFeeCurrencyId, deposit.depositFeeCurrencyId) &&
        Objects.equals(this.depositFeeCurrencyCode, deposit.depositFeeCurrencyCode) &&
        Objects.equals(this.amount, deposit.amount) &&
        Objects.equals(this.fee, deposit.fee) &&
        Objects.equals(this.txid, deposit.txid) &&
        Objects.equals(this.status, deposit.status) &&
        Objects.equals(this.createdAt, deposit.createdAt) &&
        Objects.equals(this.timestamp, deposit.timestamp) &&
        Objects.equals(this.confirmations, deposit.confirmations);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, currencyId, currencyCode, depositFeeCurrencyId, depositFeeCurrencyCode, amount, fee, txid, status, createdAt, timestamp, confirmations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Deposit {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    depositFeeCurrencyId: ").append(toIndentedString(depositFeeCurrencyId)).append("\n");
    sb.append("    depositFeeCurrencyCode: ").append(toIndentedString(depositFeeCurrencyCode)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    fee: ").append(toIndentedString(fee)).append("\n");
    sb.append("    txid: ").append(toIndentedString(txid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    confirmations: ").append(toIndentedString(confirmations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
