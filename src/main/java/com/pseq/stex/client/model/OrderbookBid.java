/*
 * stex.com rest API description
 * This is API you can use to connect your application to stex.com exchange and utilize all available features. All requests should go to the https://api3.stex.com followed by the one of the endpoint described below. The enpoints placed inside the /public section do not require authentication, all others requests should be authenticated with credentials you can get in your profile at https://app.stex.com/en/profile We also have a web-socket API present that has a number of advantages and is recommended way to connect to get the updates of the trading information To test API using this tool, please specify https://apidocs.stex.com/oauth2-redirect.html as Redirect URL in your API v3 client at https://app.stex.com/en/profile/settings 
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.pseq.stex.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;

/**
 * OrderbookBid
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-05-02T20:38:18.888Z[GMT]")public class OrderbookBid {

  @JsonProperty("currency_pair_id")

  private Integer currencyPairId = null;

  @JsonProperty("amount")

  private String amount = null;

  @JsonProperty("price")

  private BigDecimal price = null;

  @JsonProperty("amount2")

  private String amount2 = null;

  @JsonProperty("count")

  private Integer count = null;
  public OrderbookBid currencyPairId(Integer currencyPairId) {
    this.currencyPairId = currencyPairId;
    return this;
  }

  

  /**
  * Get currencyPairId
  * @return currencyPairId
  **/
  @Schema(example = "1", description = "")
  public Integer getCurrencyPairId() {
    return currencyPairId;
  }
  public void setCurrencyPairId(Integer currencyPairId) {
    this.currencyPairId = currencyPairId;
  }
  public OrderbookBid amount(String amount) {
    this.amount = amount;
    return this;
  }

  

  /**
  * Get amount
  * @return amount
  **/
  @Schema(example = "10.00000000", description = "")
  public String getAmount() {
    return amount;
  }
  public void setAmount(String amount) {
    this.amount = amount;
  }
  public OrderbookBid price(BigDecimal price) {
    this.price = price;
    return this;
  }

  

  /**
  * Get price
  * @return price
  **/
  @Schema(example = "0.00240000", description = "")
  public BigDecimal getPrice() {
    return price;
  }
  public void setPrice(BigDecimal price) {
    this.price = price;
  }
  public OrderbookBid amount2(String amount2) {
    this.amount2 = amount2;
    return this;
  }

  

  /**
  * Get amount2
  * @return amount2
  **/
  @Schema(example = "0.02400000", description = "")
  public String getAmount2() {
    return amount2;
  }
  public void setAmount2(String amount2) {
    this.amount2 = amount2;
  }
  public OrderbookBid count(Integer count) {
    this.count = count;
    return this;
  }

  

  /**
  * Get count
  * @return count
  **/
  @Schema(example = "3", description = "")
  public Integer getCount() {
    return count;
  }
  public void setCount(Integer count) {
    this.count = count;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderbookBid orderbookBid = (OrderbookBid) o;
    return Objects.equals(this.currencyPairId, orderbookBid.currencyPairId) &&
        Objects.equals(this.amount, orderbookBid.amount) &&
        Objects.equals(this.price, orderbookBid.price) &&
        Objects.equals(this.amount2, orderbookBid.amount2) &&
        Objects.equals(this.count, orderbookBid.count);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(currencyPairId, amount, price, amount2, count);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderbookBid {\n");
    
    sb.append("    currencyPairId: ").append(toIndentedString(currencyPairId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    amount2: ").append(toIndentedString(amount2)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
