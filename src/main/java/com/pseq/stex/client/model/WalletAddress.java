/*
 * stex.com rest API description
 * This is API you can use to connect your application to stex.com exchange and utilize all available features. All requests should go to the https://api3.stex.com followed by the one of the endpoint described below. The enpoints placed inside the /public section do not require authentication, all others requests should be authenticated with credentials you can get in your profile at https://app.stex.com/en/profile We also have a web-socket API present that has a number of advantages and is recommended way to connect to get the updates of the trading information To test API using this tool, please specify https://apidocs.stex.com/oauth2-redirect.html as Redirect URL in your API v3 client at https://app.stex.com/en/profile/settings 
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.pseq.stex.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * WalletAddress
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-05-02T20:38:18.888Z[GMT]")public class WalletAddress {

  @JsonProperty("address")

  private String address = null;

  @JsonProperty("address_name")

  private String addressName = null;

  @JsonProperty("additional_address_parameter")

  private String additionalAddressParameter = null;

  @JsonProperty("additional_address_parameter_name")

  private String additionalAddressParameterName = null;
  public WalletAddress address(String address) {
    this.address = address;
    return this;
  }

  

  /**
  * The main address, may be additionally required more data (see below)
  * @return address
  **/
  @Schema(example = "0X12WERTYUIIJHGFVBNMJHGDFGHJ765SDFGHJ", description = "The main address, may be additionally required more data (see below)")
  public String getAddress() {
    return address;
  }
  public void setAddress(String address) {
    this.address = address;
  }
  public WalletAddress addressName(String addressName) {
    this.addressName = addressName;
    return this;
  }

  

  /**
  * A label that usualy is shown to identify the address field
  * @return addressName
  **/
  @Schema(example = "Address", description = "A label that usualy is shown to identify the address field")
  public String getAddressName() {
    return addressName;
  }
  public void setAddressName(String addressName) {
    this.addressName = addressName;
  }
  public WalletAddress additionalAddressParameter(String additionalAddressParameter) {
    this.additionalAddressParameter = additionalAddressParameter;
    return this;
  }

  

  /**
  * If the address consists of two parts this parameter contains the second part (i.e. payment ID, destination tag, etc)
  * @return additionalAddressParameter
  **/
  @Schema(example = "qwertyuiopasdfghjkl", description = "If the address consists of two parts this parameter contains the second part (i.e. payment ID, destination tag, etc)")
  public String getAdditionalAddressParameter() {
    return additionalAddressParameter;
  }
  public void setAdditionalAddressParameter(String additionalAddressParameter) {
    this.additionalAddressParameter = additionalAddressParameter;
  }
  public WalletAddress additionalAddressParameterName(String additionalAddressParameterName) {
    this.additionalAddressParameterName = additionalAddressParameterName;
    return this;
  }

  

  /**
  * A name of the second part of the deposit address (if required)
  * @return additionalAddressParameterName
  **/
  @Schema(example = "Destination Tag", description = "A name of the second part of the deposit address (if required)")
  public String getAdditionalAddressParameterName() {
    return additionalAddressParameterName;
  }
  public void setAdditionalAddressParameterName(String additionalAddressParameterName) {
    this.additionalAddressParameterName = additionalAddressParameterName;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WalletAddress walletAddress = (WalletAddress) o;
    return Objects.equals(this.address, walletAddress.address) &&
        Objects.equals(this.addressName, walletAddress.addressName) &&
        Objects.equals(this.additionalAddressParameter, walletAddress.additionalAddressParameter) &&
        Objects.equals(this.additionalAddressParameterName, walletAddress.additionalAddressParameterName);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(address, addressName, additionalAddressParameter, additionalAddressParameterName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WalletAddress {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    addressName: ").append(toIndentedString(addressName)).append("\n");
    sb.append("    additionalAddressParameter: ").append(toIndentedString(additionalAddressParameter)).append("\n");
    sb.append("    additionalAddressParameterName: ").append(toIndentedString(additionalAddressParameterName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
